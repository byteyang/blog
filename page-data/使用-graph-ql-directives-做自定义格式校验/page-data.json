{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/使用-graph-ql-directives-做自定义格式校验","result":{"data":{"post":{"__typename":"MdxPost","slug":"/使用-graph-ql-directives-做自定义格式校验","title":"使用 GraphQL Directives 做自定义格式校验","date":"09.07.2020","tags":[{"name":"GraphQL","slug":"graph-ql"}],"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"使用 GraphQL Directives 做自定义格式校验\",\n  \"date\": \"2020-07-09T00:00:00.000Z\",\n  \"tags\": [\"GraphQL\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"\\u80CC\\u666F\"), mdx(\"p\", null, \"\\u524D\\u4E00\\u9635\\u5728\\u5199 GraphQL \\u63A5\\u53E3\\u96C6\\u6210\\u6D4B\\u8BD5 \\u65F6\\uFF0C\\u53D1\\u73B0\\u4EC5\\u4EC5\\u662F\\u4F20\\u53C2\\u683C\\u5F0F\\u6821\\u9A8C\\uFF0C\\u5C31\\u9700\\u8981\\u7F16\\u5199\\u8BB8\\u591A Case \\u3002\\u4F8B\\u5982\\uFF0C\\u66F4\\u65B0\\u673A\\u5668\\u4EBA\\u56DE\\u590D\\u8BBE\\u7F6E\\u63A5\\u53E3\\uFF1A\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"http://tuchuang.fate.ink/20200709222301_m24aOf_Screenshot.jpeg\",\n    \"alt\": null\n  }))), mdx(\"p\", null, \"\\u6BCF\\u4E2A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Int\"), \" \\u5B57\\u6BB5\\u90FD\\u9700\\u8981\\u6821\\u9A8C\\u300C\\u662F\\u5426\\u4E3A\\u975E\\u8D1F\\u6574\\u6570\\u300D\\u3002\\u4F46\\u5176\\u5B9E Case \\u5E76\\u4E0D\\u6B62\\u8FD9\\u4E9B\\uFF0C\\u56E0\\u4E3A\\u6BCF\\u4E2A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Int\"), \" \\u5B57\\u6BB5\\u7684\\u5408\\u6CD5\\u6761\\u4EF6\\u9664\\u4E86\\u300C\\u975E\\u8D1F\\u300D\\u4EE5\\u5916\\uFF0C\\u5404\\u4E0D\\u76F8\\u540C\\uFF1A\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"reply_strategy\"), \": \", \"[1,2,3,4]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"general_reply_switch\"), \": \", \"[1,2]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"general_reply_respond_all\"), \": \", \"[0,1]\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"String\"), \" \\u7C7B\\u578B\\u7684\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"reply_priority\"), \"\\u5B57\\u6BB5\\uFF0C\\u683C\\u5F0F\\u66F4\\u4E25\\u683C\\uFF0C\\u9700\\u8981\\u662F\\u7531\\u8FD9\\u56DB\\u4E2A\\u5355\\u8BCD\\u7528\\u9017\\u53F7\\u62FC\\u63A5\\u6210\\u7684\\u5B57\\u7B26\\u4E32:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"TASK\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"KEYWORD\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"QA\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CHITCHAT\")), mdx(\"p\", null, \"\\u9057\\u61BE\\u7684\\u662F\\uFF0C\\u5F53\\u524D\\u7EDD\\u5927\\u90E8\\u5206\\u7684\\u63A5\\u53E3\\u90FD\\u6CA1\\u6709\\u505A\\u4E25\\u683C\\u4F20\\u53C2\\u7684\\u683C\\u5F0F\\u6821\\u9A8C\\u3002\\u5F97\\u76CA\\u4E8E \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GraphQL\"), \" \\u7684\\u5F3A\\u7C7B\\u578B\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u907F\\u514D\\u57FA\\u7840\\u7C7B\\u578B\\u7684\\u53C2\\u6570\\u9519\\u8BEF\\uFF0C\\u4F8B\\u5982 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Int\"), \" \\u4F20\\u6210\\u4E86 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"String\"), \"\\u3002\\u4F46\\u4EE5\\u4E0A\\u9762\\u7684\\u60C5\\u51B5\\u4E3A\\u4F8B\\uFF0C\\u5982\\u679C\\u57FA\\u7840\\u7C7B\\u578B\\u6B63\\u786E\\uFF0C\\u503C\\u4E0D\\u5408\\u6CD5\\uFF0C\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GraphQL\"), \" \\u662F\\u65E0\\u6CD5\\u68C0\\u6D4B\\u5230\\u7684\\u3002\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u96BE\\u9053\\u8981\\u5728\\u6BCF\\u4E2A\\u63A5\\u53E3\\u7684\\u5F00\\u5934\\uFF0C\\u624B\\u52A8\\u6DFB\\u52A0\\u4F20\\u53C2\\u6821\\u9A8C\\u4EE3\\u7801\\uFF1F\")), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"http://tuchuang.fate.ink/20200709234145_yic16r_1594309297295.jpeg\",\n    \"alt\": null\n  }))), mdx(\"h3\", null, \"\\u8E29\\u5751: GraphQL Custom Scalars\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GraphQL\"), \" \\u63D0\\u4F9B\\u4E86\\u4E00\\u4E0B\\u51E0\\u79CD\\u57FA\\u7840\\u7C7B\\u578B(\\u6807\\u91CF):\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Int\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Float\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"String\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Boolean\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ID\"))), mdx(\"p\", null, \"\\u65E2\\u7136\\u57FA\\u7840\\u7684\\u4E0D\\u80FD\\u6EE1\\u8DB3\\u9700\\u6C42\\uFF0C\\u662F\\u5426\\u53EF\\u4EE5\\u81EA\\u5B9A\\u4E49\\u7C7B\\u578B\\uFF1F\\u6B63\\u597D \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GraphQL\"), \" \\u63D0\\u4F9B\\u81EA\\u5B9A\\u4E49\\u6807\\u91CF\\u7684\\u65B9\\u5F0F\\uFF0C\\u6211\\u4EEC\\u53EA\\u8981\\u7167\\u7740\\u6587\\u6863\\u4E0A\\u7684\\u65B9\\u6CD5\\u5C31\\u80FD\\u81EA\\u5B9A\\u4E49\\u6807\\u91CF\\u5566:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"const myCustomScalarType = new GraphQLScalarType({\\n  name: 'MyCustomScalar',\\n  description: 'Description of my custom scalar type',\\n  serialize(value) {\\n    let result\\n    // \\u8FD9\\u91CC\\u53EF\\u4EE5\\u5BF9 result \\u8FDB\\u884C\\u4EFB\\u610F\\u64CD\\u4F5C\\n    return result\\n  },\\n  parseValue(value) {\\n    let result\\n    // \\u8FD9\\u91CC\\u53EF\\u4EE5\\u5BF9 result \\u8FDB\\u884C\\u4EFB\\u610F\\u64CD\\u4F5C\\n    return result\\n  },\\n})\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u5751\\u5728\\u54EA\\u513F\\u5462\\uFF1F\")), mdx(\"p\", null, \"\\u81EA\\u5B9A\\u4E49\\u6807\\u91CF\\u867D\\u7136\\u53EF\\u4EE5\\u52AB\\u6301\\u6807\\u91CF\\u7684\\u503C\\uFF0C\\u4F46\\u65E0\\u6CD5\\u4F20\\u53C2\\u3002\\u8FD9\\u5C31\\u610F\\u5473\\u7740\\uFF0C\\u6211\\u4EEC\\u9700\\u8981\\u4E3A\\u6BCF\\u4E00\\u79CD\\u89C4\\u5219\\uFF0C\\u521B\\u5EFA\\u4E00\\u4E2A\\u6807\\u91CF:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Int_Zero_One\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Int_Zero_One_Two\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Int_Zero_One_Two_Three\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2026\\u2026\")), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"http://tuchuang.fate.ink/20200709234145_yic16r_1594309297295.jpeg\",\n    \"alt\": null\n  }))), mdx(\"h3\", null, \"\\u89E3\\u51B3: GraphQL Directives\"), mdx(\"p\", null, \"\\u65E2\\u7136\\u6807\\u91CF\\u4E0D\\u80FD\\u4F20\\u53C2\\uFF0C\\u90A3\\u6709\\u6CA1\\u6709\\u53EF\\u4EE5\\u4F20\\u53C2\\u7684\\u65B9\\u5F0F\\uFF1F\\u6709\\uFF01\\u90A3\\u5C31\\u662F \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Custom Directives\"), \" \\u2014\\u2014 \\u81EA\\u5B9A\\u4E49\\u6307\\u4EE4\\u3002\"), mdx(\"p\", null, \"\\u4E0A\\u4EE3\\u7801:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-graphql\"\n  }), \"type Book {\\n  title: String @length(max: 50)\\n}\\n\")), mdx(\"p\", null, \"\\u53EF\\u4EE5\\u770B\\u5230\\uFF0C\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"title\"), \" \\u7684\\u7C7B\\u578B\\u4F9D\\u65E7\\u662F\\u4E00\\u4E2A\\u57FA\\u7840\\u6807\\u91CF \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"String\"), \"\\uFF0C\\u7279\\u6B8A\\u7684\\u662F\\u5728\\u7C7B\\u578B\\u540E\\u6709\\u4E2A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@length(max: 50)\"), \" \\u8FD9\\u5C31\\u662F\\u81EA\\u5B9A\\u4E49\\u6307\\u4EE4\\u3002\"), mdx(\"h4\", null, \"\\u81EA\\u5B9A\\u4E49\\u6307\\u4EE4\\u7684\\u5B9E\\u73B0\"), mdx(\"h5\", null, \"1. \\u521B\\u5EFA\\u81EA\\u5B9A\\u4E49\\u6807\\u91CF\"), mdx(\"p\", null, \"\\u60F3\\u8981\\u52AB\\u6301\\u5B57\\u6BB5\\u503C\\uFF0C\\u53EA\\u80FD\\u60F3\\u529E\\u6CD5\\u5728\\u5B57\\u6BB5\\u7C7B\\u578B\\u6807\\u91CF\\u7684\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\u5E8F\\u5217\\u5316/\\u53CD\\u5E8F\\u5217\\u5316\"), \"\\u65B9\\u6CD5\\u4E2D\\u4FEE\\u6539\\u3002\\u56E0\\u4E3A\\u6807\\u91CF\\u9ED8\\u8BA4\\u7684\\u6784\\u9020\\u51FD\\u6570\\u65E0\\u6CD5\\u4F20\\u53C2\\uFF0C\\u56E0\\u6B64\\u8FD9\\u91CC\\u65B0\\u5EFA\\u4E00\\u4E2A\\u7C7B\\uFF0C\\u53BB\\u7EE7\\u627F\\u6807\\u91CF\\u7C7B\\uFF0C\\u4ECE\\u800C\\u80FD\\u591F\\u6539\\u5199\\u6784\\u9020\\u51FD\\u6570\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"class LimitedLengthType extends GraphQLScalarType {\\n  // \\u6CE8\\u610F\\u8FD9\\u4E2A\\u6784\\u9020\\u51FD\\u6570\\uFF0C\\u4F20\\u4E86\\u989D\\u5916\\u7684\\u53C2\\u6570: maxLength\\n  constructor(type, maxLength) {\\n    super({\\n      name: `LengthAtMost${maxLength}`,\\n\\n      serialize(value) {\\n        value = type.serialize(value)\\n\\n        // \\u4F7F\\u7528 maxLength \\u8FDB\\u884C\\u6821\\u9A8C\\n        assert.isAtMost(value.length, maxLength)\\n        return value\\n      },\\n\\n      parseValue(value) {\\n        return type.parseValue(value)\\n      },\\n\\n      parseLiteral(ast) {\\n        return type.parseLiteral(ast)\\n      },\\n    })\\n  }\\n}\\n\")), mdx(\"h5\", null, \"2. \\u901A\\u8FC7\\u6307\\u4EE4\\u63A5\\u53E3\\u8BBF\\u95EE\\u5F53\\u524D\\u5B57\\u6BB5\\uFF0C\\u5C06\\u5B57\\u6BB5\\u7C7B\\u578B\\u6539\\u5199\\u4E3A\\u65B0\\u7684\\u81EA\\u5B9A\\u4E49\\u6807\\u91CF\"), mdx(\"p\", null, \"\\u6709\\u4E86\\u53EF\\u4EE5\\u4F20\\u53C2\\u7684\\u65B0\\u6807\\u91CF\\uFF0C\\u63A5\\u4E0B\\u6765\\u7684\\u5DE5\\u4F5C\\u5C31\\u662F\\u83B7\\u53D6\\u5230\\u81EA\\u5B9A\\u4E49\\u53C2\\u6570\\u3002\\u901A\\u8FC7\\u6307\\u4EE4\\u63A5\\u53E3\\uFF0C\\u6211\\u4EEC\\u53EF\\u4EE5\\u83B7\\u53D6\\u6307\\u4EE4\\u4E2D\\u7684\\u53C2\\u6570\\uFF0C\\u5E76\\u4E14\\u901A\\u8FC7\\u300C\\u5C06\\u5F53\\u524D\\u5B57\\u6BB5\\u7C7B\\u578B\\u6539\\u5199\\u4E3A\\u65B0\\u6807\\u91CF\\u300D\\u7684\\u65B9\\u5F0F\\uFF0C\\u5C06\\u53C2\\u6570\\u4F20\\u5165\\u5B57\\u6BB5\\u5185\\u90E8\\uFF0C\\u7528\\u4E8E\\u6821\\u9A8C\\u3002\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\",\n    \"metastring\": \"{16-18}\",\n    \"{16-18}\": true\n  }), \"class LengthDirective extends SchemaDirectiveVisitor {\\n  // \\u6307\\u4EE4\\u63A5\\u53E3\\u63D0\\u4F9B\\u4E86\\u8BBF\\u95EE\\u5F53\\u524D\\u5B57\\u6BB5\\u7684\\u80FD\\u529B\\n  visitInputFieldDefinition(field) {\\n    this.wrapType(field)\\n  }\\n\\n  visitFieldDefinition(field) {\\n    this.wrapType(field)\\n  }\\n\\n  wrapType(field) {\\n    if (\\n      field.type instanceof GraphQLNonNull &&\\n      field.type.ofType instanceof GraphQLScalarType\\n    ) {\\n      // \\u6539\\u5199\\u5B57\\u6BB5\\u7C7B\\u578B\\n      field.type = new GraphQLNonNull(\\n        new LimitedLengthType(field.type.ofType, this.args.max)\\n      )\\n    } else if (field.type instanceof GraphQLScalarType) {\\n      field.type = new LimitedLengthType(field.type, this.args.max)\\n    } else {\\n      throw new Error(`Not a scalar type: ${field.type}`)\\n    }\\n  }\\n}\\n\")), mdx(\"h5\", null, \"3. \\u5F15\\u5165\\u81EA\\u5B9A\\u4E49\\u6307\\u4EE4\"), mdx(\"p\", null, \"\\u81EA\\u5B9A\\u4E49\\u6307\\u4EE4\\u53EF\\u4EE5\\u5728 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"graphql-tools\"), \" \\u4E2D\\u7684 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"makeExecutableSchema\"), \" \\u4E2D\\u5F15\\u5165\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"const schema = makeExecutableSchema({\\n  typeDefs,\\n  schemaDirectives: {\\n    length: LengthDirective,\\n  },\\n})\\n\")), mdx(\"p\", null, \"\\u4E5F\\u53EF\\u4EE5\\u76F4\\u63A5\\u5728 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"apollo-server\"), \" \\u4E2D\\u5F15\\u5165\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"const server = new ApolloServer({\\n  typeDefs,\\n  resolvers,\\n  schemaDirectives: {\\n    length: LengthDirective,\\n  },\\n})\\n\")), mdx(\"p\", null, \"\\u5982\\u6B64\\u4E00\\u6765\\uFF0C\\u6211\\u4EEC\\u5C31\\u53EF\\u4EE5\\u5229\\u7528\\u540C\\u6837\\u7684\\u81EA\\u5B9A\\u4E49\\u6307\\u4EE4\\uFF0C\\u901A\\u8FC7\\u53C2\\u6570\\u63A7\\u5236\\uFF0C\\u5BF9\\u4E0D\\u540C\\u7684\\u8FDB\\u884C\\u683C\\u5F0F\\u9A8C\\u8BC1\\u3002\\u4F8B\\u5982\\uFF1A\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"reply_strategy: Int @validate(min: 1, max: 4)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"general_reply_switch: Int @validate(min: 1, max: 2)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"general_reply_respond_all: Int @validate(min: 0, max: 1)\"))), mdx(\"p\", null, \"\\u662F\\u4E0D\\u662F\\u7075\\u6D3B\\u4E86\\u5F88\\u591A\\uFF1F\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"http://tuchuang.fate.ink/20200709232327_CPZJwA_Screenshot.jpeg\",\n    \"alt\": null\n  }))), mdx(\"h4\", null, \"\\u53C2\\u8003\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.apollographql.com/blog/graphql-validation-using-directives-4908fd5c1055\"\n  }), \"GraphQL validation using directives\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.apollographql.com/docs/apollo-server/schema/creating-directives\"\n  }), \"Implementing directives\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/confuser/graphql-constraint-directive\"\n  }), \"graphql-constraint-directive\"))));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"背景 前一阵在写 GraphQL 接口集成测试 时，发现仅仅是传参格式校验，就需要编写许多 Case 。例如，更新机器人回复设置接口： 每个  Int  字段都需要校验「是否为非负整数」。但其实 Case 并不止这些，因为每个  Int…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/使用-graph-ql-directives-做自定义格式校验","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["318001574","3787687951","3787687951"]}